plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.greenrobot.greendao'
}

static def releaseTime() {
    def utcDate = new Date()
    def chinaTimeZone = TimeZone.getTimeZone("Asia/Shanghai") // 使用亚洲/上海时区代表中国时间
    def formattedDate = utcDate.format("yyyy-MM-dd_HH_mm", chinaTimeZone)
    return formattedDate
}

android {
    namespace "com.lefu.ppblutoothkit"
    compileSdk 34

    defaultConfig {
        applicationId "com.lefu.ppblutoothkit"
        minSdk 21
        targetSdk 34
        versionCode LIB_VERSION_CODE as int
        versionName LIB_VERSION
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    /******************************以下Demo配置项，你的项目中无需引入*************************************/
    packagingOptions {
        exclude 'res/values/values.xml'
        exclude 'R.txt'
        exclude 'proguard.txt'
        exclude 'META-INF/proguard/coroutines.pro'
        exclude 'META-INF/body_sl_release.kotlin_module'
        exclude 'META-INF/ppbasekit_debug.kotlin_module'
        exclude 'META-INF/ppcalculatekit_debug.kotlin_module'
        exclude 'META-INF/ppbluetoothkit_debug.kotlin_module'
        exclude 'AndroidManifest.xml'
    }
    /******************************以上Demo配置项，你的项目中无需引入*************************************/

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    defaultConfig {
        multiDexEnabled true
    }

    bundle {
        density {
            // Different APKs are generated for devices with different screen densities; true by default.
            enableSplit true
        }
        abi {
            // Different APKs are generated for devices with different CPU architectures; true by default.
            enableSplit true
        }
        language {
            // This is disabled so that the App Bundle does NOT split the APK for each language.
            // We're gonna use the same APK for all languages.
            enableSplit true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17 // 或者使用 VERSION_1_8
        targetCompatibility JavaVersion.VERSION_17 // 或者使用 VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "17" // 或者 "1.8"
    }

    android.applicationVariants.all { variant ->
        if (variant.buildType.name.equals('release')) {
            variant.outputs.all {
                outputFileName = "PPBluetoothKit_${variant.versionName}_${releaseTime()}.apk"
                assemble.doLast {
                    println "${outputFile.parent}"
                    print "$rootDir" + File.separator + "apk"
                    copy {
                        from outputFile.parent
                        include "*.apk"
                        into "$rootDir" + File.separator + "apk"
                    }
                    delete "${outputFile.parent}"
                }

            }
            if (variant.buildType.isMinifyEnabled()) {
                variant.assemble.doLast {
                    copy {
                        from variant.mappingFile
                        include "*.txt"
                        into "$rootDir" + File.separator + "mapping" + File.separator + "${android.defaultConfig.versionName}"
                        rename {
                            "PPBluetoothKit_${variant.versionName}_mapping.txt"
                        }
                    }

                }
            }

        } else {
            variant.outputs.all {
                outputFileName = "PPBluetoothKit_${variant.versionName}_${releaseTime()}.apk"
            }
        }

    }

}

dependencies {
    api fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'com.google.android.material:material:1.12.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'

    implementation project(':data_db')

    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'

    implementation files('libs\\iopp-1.0.3.jar')
    implementation files('libs\\okhttputils-2_6_2.jar')
    implementation 'com.squareup.okhttp3:okhttp:4.6.0'
    implementation 'com.alibaba:fastjson:1.2.76'

    //基础模块，必须/Basic module, must
    api 'com.lefu.ppbasekit:ppbasekit:4.0.4.2'
    //蓝牙协议模块，集成设备和解析体重信息/Bluetooth protocol module, integrating devices and parsing weight information
    api 'com.lefu.ppbluetoothkit:ppbluetoothkit:4.0.4.2'
    //体脂计算库，根据需要引入/Body fat calculation library, introduced as needed
    api 'com.lefu.ppcalculatekit:ppcalculatekit:4.0.4.2'

//    api(project(":ppsdkkit:ppbasekit"))
//    api(project(":ppsdkkit:ppbluetoothkit"))
//    api(project(":ppsdkkit:ppcalculatekit"))

}
