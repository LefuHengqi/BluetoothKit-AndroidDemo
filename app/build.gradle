apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

static def releaseTime() {
    return new Date().format("yyyy-MM-dd_HH_mm", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.lefu.ppblutoothkit"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode APP_VERSION_CODE as int
        versionName APP_VERSION
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    packagingOptions {
        exclude 'res/values/values.xml'
        exclude 'META-INF/proguard/coroutines.pro'
        exclude 'META-INF/body_sl_release.kotlin_module'
        exclude 'META-INF/body_sl_release.kotlin_module'
        exclude 'AndroidManifest.xml'

        //以下代码是Demo需要使用的，在你们的项目中不需要使用
        //直流秤
        pickFirst 'lib/armeabi-v7a/libsl.so'
        pickFirst 'lib/arm64-v8a/libsl.so'
        pickFirst 'lib/x86_64/libsl.so'
        pickFirst 'lib/x86/libsl.so'
        //交流秤
        pickFirst 'lib/armeabi-v7a/libbhBodyComposition.so'
        pickFirst 'lib/arm64-v8a/libbhBodyComposition.so'
        pickFirst 'lib/x86_64/libbhBodyComposition.so'
        pickFirst 'lib/x86/libbhBodyComposition.so'
        pickFirst 'lib/armeabi-v7a/libbh1BodyComposition.so'
        pickFirst 'lib/arm64-v8a/libbh1BodyComposition.so'
        pickFirst 'lib/x86_64/libbh1BodyComposition.so'
        pickFirst 'lib/x86/libbh1BodyComposition.so'
        pickFirst 'lib/armeabi-v7a/libbh2BodyComposition.so'
        pickFirst 'lib/arm64-v8a/libbh2BodyComposition.so'
        pickFirst 'lib/x86_64/libbh2BodyComposition.so'
        pickFirst 'lib/x86/libbh2BodyComposition.so'
        pickFirst 'lib/armeabi-v7a/libbh3BodyComposition.so'
        pickFirst 'lib/arm64-v8a/libbh3BodyComposition.so'
        pickFirst 'lib/x86_64/libbh3BodyComposition.so'
        pickFirst 'lib/x86/libbh3BodyComposition.so'
        pickFirst 'lib/armeabi-v7a/libbh4BodyComposition.so'
        pickFirst 'lib/arm64-v8a/libbh4BodyComposition.so'
        pickFirst 'lib/x86_64/libbh4BodyComposition.so'
        pickFirst 'lib/x86/libbh4BodyComposition.so'

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    defaultConfig {
        multiDexEnabled true
    }

    bundle {
        density {
            // Different APKs are generated for devices with different screen densities; true by default.
            enableSplit true
        }
        abi {
            // Different APKs are generated for devices with different CPU architectures; true by default.
            enableSplit true
        }
        language {
            // This is disabled so that the App Bundle does NOT split the APK for each language.
            // We're gonna use the same APK for all languages.
            enableSplit true
        }
    }

    //资源混淆冲突时开启
//    configurations.all {
//        resolutionStrategy.force 'androidx.core:core:1.3.1'
//        resolutionStrategy.force 'androidx.constraintlayout:constraintlayout:1.1.3'
//    }

    android.applicationVariants.all { variant ->
        if (variant.buildType.name.equals('release')) {
            variant.outputs.all {
                outputFileName = "PPBluetoothKit_${variant.versionName}_${releaseTime()}.apk"
                assemble.doLast {
                    println "${outputFile.parent}"
                    print "$rootDir" + File.separator + "apk"
                    copy {
                        from outputFile.parent
                        include "*.apk"
                        into "$rootDir" + File.separator + "apk"
                    }
                    delete "${outputFile.parent}"
                }

            }
            if (variant.buildType.isMinifyEnabled()) {
                variant.assemble.doLast {
                    copy {
                        from variant.mappingFile
                        include "*.txt"
                        into "$rootDir" + File.separator + "mapping" + File.separator + "${android.defaultConfig.versionName}"
                        rename {
                            "PPBluetoothKit_${variant.versionName}_mapping.txt"
                        }
                    }

                }
            }

        } else {
            variant.outputs.all {
                outputFileName = "PPBluetoothKit_${variant.versionName}_${releaseTime()}.apk"
            }
        }

    }

}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
//    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.8'

    implementation project(':data_db')
    implementation project(':base')
    implementation project(':ppscalelib')
    implementation project(':bodyindex')

    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.16'

    implementation files('libs\\iopp-1.0.3.jar')
    implementation files('libs\\okhttputils-2_6_2.jar')
    implementation 'com.squareup.okhttp3:okhttp:4.6.0'
    implementation 'com.alibaba:fastjson:1.2.76'

}
