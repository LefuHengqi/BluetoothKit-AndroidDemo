apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'com.kezong.fat-aar'

def releaseTime() {
//GMT+8代表北京时间
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+8"))
}

def fileName

def GROUP_ID = "com.lefu.ppbluetoothkit"
def ARTIFACT_ID = "ppbluetoothkit"

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 21
        versionCode LIB_VERSION_CODE as int
        versionName LIB_VERSION

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.libraryVariants.all { variant ->
                variant.outputs.all { output ->
                    def f = output.outputFileName
                    if (f != null && f.endsWith('.aar')) {
                        fileName = "${ARTIFACT_ID}_v${defaultConfig.versionName}_${releaseTime()}.aar"
                        output.outputFileName = fileName
                    }
                }
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.libraryVariants.all { variant ->
                variant.outputs.all { output ->
                    def f = output.outputFileName
                    if (f != null && f.endsWith('.aar')) {
                        fileName = "${ARTIFACT_ID}_v${defaultConfig.versionName}_${releaseTime()}.aar"
                        output.outputFileName = fileName
                    }
                }
            }
        }
    }

}

dependencies {
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'

//    api(project(":ppsdkkit:lefulib:bluetoothkit"))
    api project(":ppsdkkit:lefulib:bluetoothkit")

    compileOnly(project(":ppsdkkit:ppbasekit"))
//    implementation 'com.lefu.ppbasekit:ppbasekit:4.0.1.5'

}


//上传到maven
//apply plugin: 'maven'
//uploadArchives {
//    repositories.mavenDeployer {
//        String deployPath = getProjectDir().absolutePath + "/../../maven/"
//        repository(url: "file://${deployPath}")
//        pom.groupId = GROUP_ID
//        pom.artifactId = ARTIFACT_ID
//        pom.version = LIB_VERSION
//        pom.packaging = 'aar'
//    }
//}

// 配置发布
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release  // 发布release版本

                // 自定义你的包信息
                groupId = GROUP_ID
                artifactId = ARTIFACT_ID
                version = LIB_VERSION

                // 可选：包含源码和文档
//                artifact sourcesJar
//                artifact javadocJar
            }
        }

        repositories {
            maven {
                // 本地仓库路径（默认生成在模块的build/repo目录）
//                url = layout.buildDirectory.dir('repo')

                // 或者指定绝对路径
                url = uri("${rootProject.projectDir}/maven")
            }
        }
    }
}

//// 先创建 JavaDoc 生成任务
//task androidJavadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    android.libraryVariants.all { variant ->
//        if (variant.name == 'release') {
//            owner.classpath += variant.javaCompileProvider.get().classpath
//        }
//    }
//    exclude '**/R.html', '**/R.*.html', '**/index.html'
//}
//
//// 再创建 JavaDoc JAR 任务
//task javadocJar(type: Jar, dependsOn: androidJavadoc) {
//    classifier = 'javadoc'
//    from androidJavadoc.destinationDir
//}
//
//// 可选：源码 JAR 任务
//task sourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.srcDirs
//}
















