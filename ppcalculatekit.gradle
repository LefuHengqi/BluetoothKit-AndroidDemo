apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

def releaseTime() {
//GMT+8代表北京时间
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+8"))
}

def fileName

def GROUP_ID = "com.lefu.ppcalculatekit"
def ARTIFACT_ID = "ppcalculatekit"

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 18
        versionCode LIB_VERSION_CODE as int
        versionName LIB_VERSION

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.libraryVariants.all { variant ->
                variant.outputs.all { output ->
                    def f = output.outputFileName
                    if (f != null && f.endsWith('.aar')) {
                        fileName = "${ARTIFACT_ID}_v${defaultConfig.versionName}_${releaseTime()}.aar"
                        output.outputFileName = fileName
                    }
                }
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.libraryVariants.all { variant ->
                variant.outputs.all { output ->
                    def f = output.outputFileName
                    if (f != null && f.endsWith('.aar')) {
                        fileName = "${ARTIFACT_ID}_v${defaultConfig.versionName}_${releaseTime()}.aar"
                        output.outputFileName = fileName
                    }
                }
            }
        }
    }

}

dependencies {
    api fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.8'

    compileOnly(project(":ppsdkkit:ppbasekit"))
//    implementation 'com.lefu.ppbasekit:ppbasekit:4.0.1.5'

}

//上传到maven
apply plugin: 'maven'
uploadArchives {
    repositories.mavenDeployer {
        String deployPath = getProjectDir().absolutePath + "/../../maven/"
        repository(url: "file://${deployPath}")
        pom.groupId = GROUP_ID
        pom.artifactId = ARTIFACT_ID
        pom.version = LIB_VERSION
        pom.packaging = 'aar'
    }
}















